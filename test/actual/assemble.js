[ { type: 'comment', begin: 1, end: 6 },
  { type: 'comment', begin: 10, end: 12 },
  { begin: 14,
    type: 'declaration',
    name: 'path',
    value: 'require(\'path\')',
    string: 'path',
    original: 'var path = require(\'path\');' },
  { begin: 15,
    type: 'declaration',
    name: 'util',
    value: 'require(\'util\')',
    string: 'util',
    original: 'var util = require(\'util\');' },
  { begin: 16,
    type: 'declaration',
    name: 'fs',
    value: 'require(\'vinyl-fs\')',
    string: 'fs',
    original: 'var fs = require(\'vinyl-fs\');' },
  { begin: 17,
    type: 'declaration',
    name: 'gutil',
    value: 'require(\'gulp-util\')',
    string: 'gutil',
    original: 'var gutil = require(\'gulp-util\');' },
  { begin: 18,
    type: 'declaration',
    name: 'es',
    value: 'require(\'event-stream\')',
    string: 'es',
    original: 'var es = require(\'event-stream\');' },
  { begin: 19,
    type: 'declaration',
    name: 'Orchestrator',
    value: 'require(\'orchestrator\')',
    string: 'Orchestrator',
    original: 'var Orchestrator = require(\'orchestrator\');' },
  { begin: 20,
    type: 'declaration',
    name: 'arrayify',
    value: 'require(\'arrayify-compact\')',
    string: 'arrayify',
    original: 'var arrayify = require(\'arrayify-compact\');' },
  { begin: 21,
    type: 'declaration',
    name: 'delimiterMap',
    value: 'require(\'delimiter-map\')',
    string: 'delimiterMap',
    original: 'var delimiterMap = require(\'delimiter-map\');' },
  { begin: 22,
    type: 'declaration',
    name: 'debug',
    value: 'require(\'debug\')(\'assemble\')',
    string: 'debug',
    original: 'var debug = require(\'debug\')(\'assemble\');' },
  { begin: 23,
    type: 'declaration',
    name: 'hljs',
    value: 'require(\'highlight.js\')',
    string: 'hljs',
    original: 'var hljs = require(\'highlight.js\');' },
  { begin: 24,
    type: 'declaration',
    name: 'language',
    value: 'require(\'lang-map\')',
    string: 'language',
    original: 'var language = require(\'lang-map\');' },
  { begin: 25,
    type: 'declaration',
    name: 'Layouts',
    value: 'require(\'layouts\')',
    string: 'Layouts',
    original: 'var Layouts = require(\'layouts\');' },
  { begin: 26,
    type: 'declaration',
    name: '_',
    value: 'require(\'lodash\')',
    string: '_',
    original: 'var _ = require(\'lodash\');' },
  { begin: 27,
    type: 'declaration',
    name: 'extend',
    value: '_.extend',
    string: 'extend',
    original: 'var extend = _.extend;' },
  { begin: 30,
    type: 'declaration',
    name: 'Cache',
    value: 'require(\'config-cache\')',
    string: 'Cache',
    original: 'var Cache = require(\'config-cache\');' },
  { begin: 31,
    type: 'declaration',
    name: 'Template',
    value: 'require(\'./view/template\')',
    string: 'Template',
    original: 'var Template = require(\'./view/template\');' },
  { begin: 32,
    type: 'declaration',
    name: 'Files',
    value: 'require(\'./view/file\')',
    string: 'Files',
    original: 'var Files = require(\'./view/file\');' },
  { begin: 33,
    type: 'declaration',
    name: 'View',
    value: 'require(\'./view/view\')',
    string: 'View',
    original: 'var View = require(\'./view/view\');' },
  { begin: 36,
    type: 'declaration',
    name: 'helpers',
    value: 'require(\'./loaders/helpers\')',
    string: 'helpers',
    original: 'var helpers = require(\'./loaders/helpers\');' },
  { begin: 37,
    type: 'declaration',
    name: 'Loader',
    value: 'require(\'./loader.js\')',
    string: 'Loader',
    original: 'var Loader = require(\'./loader.js\');' },
  { begin: 40,
    type: 'declaration',
    name: 'defaultPlugins',
    value: 'require(\'./defaults\')',
    string: 'defaultPlugins',
    original: 'var defaultPlugins = require(\'./defaults\');' },
  { begin: 41,
    type: 'declaration',
    name: 'middleware',
    value: 'require(\'./middleware\')',
    string: 'middleware',
    original: 'var middleware = require(\'./middleware\');' },
  { begin: 42,
    type: 'declaration',
    name: 'noopParser',
    value: 'require(\'./parsers/noop\')',
    string: 'noopParser',
    original: 'var noopParser = require(\'./parsers/noop\');' },
  { begin: 43,
    type: 'declaration',
    name: 'pathParser',
    value: 'require(\'./parsers/paths\')',
    string: 'pathParser',
    original: 'var pathParser = require(\'./parsers/paths\');' },
  { begin: 44,
    type: 'declaration',
    name: 'collection',
    value: 'require(\'./plugins/collection\')',
    string: 'collection',
    original: 'var collection = require(\'./plugins/collection\');' },
  { begin: 45,
    type: 'declaration',
    name: 'parsers',
    value: 'require(\'./plugins/parser\')',
    string: 'parsers',
    original: 'var parsers = require(\'./plugins/parser\');' },
  { begin: 46,
    type: 'declaration',
    name: 'buffer',
    value: 'require(\'./plugins/buffer\')',
    string: 'buffer',
    original: 'var buffer = require(\'./plugins/buffer\');' },
  { begin: 47,
    type: 'declaration',
    name: 'routes',
    value: 'require(\'./plugins/routes\')',
    string: 'routes',
    original: 'var routes = require(\'./plugins/routes\');' },
  { begin: 48,
    type: 'declaration',
    name: 'pages',
    value: 'require(\'./plugins/pages\')',
    string: 'pages',
    original: 'var pages = require(\'./plugins/pages\');' },
  { begin: 49,
    type: 'declaration',
    name: 'utils',
    value: 'require(\'./utils\')',
    string: 'utils',
    original: 'var utils = require(\'./utils\');' },
  { type: 'comment', begin: 52, end: 68 },
  { begin: 70,
    type: 'function statement',
    name: 'Assemble',
    args: [ 'options' ],
    string: '()',
    original: 'function Assemble(options) {' },
  { type: 'comment', begin: 75, end: 77 },
  { type: 'comment', begin: 83, end: 90 },
  { begin: 92,
    type: 'prototype method',
    class: 'Assemble',
    name: 'init',
    args: [ 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.init = function(options) {' },
  { begin: 95,
    type: 'property',
    receiver: 'this',
    name: 'orig',
    value: 'new Cache()',
    string: 'this.orig',
    original: 'this.orig = new Cache();' },
  { begin: 96,
    type: 'property',
    receiver: 'this',
    name: 'option',
    value: 'new Cache(options)',
    string: 'this.option',
    original: 'this.option = new Cache(options);' },
  { begin: 97,
    type: 'property',
    receiver: 'this',
    name: 'options',
    value: 'this.option.cache',
    string: 'this.options',
    original: 'this.options = this.option.cache;' },
  { begin: 98,
    type: 'property',
    receiver: 'this',
    name: 'files',
    value: 'new Files()',
    string: 'this.files',
    original: 'this.files = new Files();' },
  { begin: 100,
    type: 'property',
    receiver: 'this',
    name: 'partialsCache',
    value: 'new Template({}, options)',
    string: 'this.partialsCache',
    original: 'this.partialsCache = new Template({}, options);' },
  { begin: 101,
    type: 'property',
    receiver: 'this',
    name: 'layoutsCache',
    value: 'new Template({}, options)',
    string: 'this.layoutsCache',
    original: 'this.layoutsCache = new Template({}, options);' },
  { begin: 103,
    type: 'property',
    receiver: 'this',
    name: 'middleware',
    value: '[]',
    string: 'this.middleware',
    original: 'this.middleware = [];' },
  { begin: 104,
    type: 'property',
    receiver: 'this',
    name: 'plugins',
    value: '{}',
    string: 'this.plugins',
    original: 'this.plugins = {};' },
  { begin: 105,
    type: 'property',
    receiver: 'this',
    name: 'locals',
    value: '{}',
    string: 'this.locals',
    original: 'this.locals = {};' },
  { begin: 106,
    type: 'property',
    receiver: 'this',
    name: 'engines',
    value: '{}',
    string: 'this.engines',
    original: 'this.engines = {};' },
  { begin: 107,
    type: 'property',
    receiver: 'this',
    name: '_layouts',
    value: '{}',
    string: 'this._layouts',
    original: 'this._layouts = {};' },
  { type: 'comment', begin: 114, end: 118 },
  { begin: 120,
    type: 'prototype method',
    class: 'Assemble',
    name: 'defaultConfig',
    args: [ 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.defaultConfig = function (options) {' },
  { type: 'comment', begin: 216, end: 222 },
  { begin: 224,
    type: 'prototype method',
    class: 'Assemble',
    name: 'listen',
    args: [],
    string: '.prototype.()',
    original: 'Assemble.prototype.listen = function() {' },
  { type: 'comment', begin: 247, end: 255 },
  { begin: 257,
    type: 'prototype method',
    class: 'Assemble',
    name: 'cwd',
    args: [],
    string: '.prototype.()',
    original: 'Assemble.prototype.cwd = function () {' },
  { type: 'comment', begin: 268, end: 276 },
  { begin: 278,
    type: 'prototype method',
    class: 'Assemble',
    name: 'plugin',
    args: [ 'stage', 'plugins' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.plugin = function (stage, plugins) {' },
  { type: 'comment', begin: 291, end: 308 },
  { begin: 310,
    type: 'prototype property',
    class: 'Assemble',
    name: 'task',
    value: 'Assemble.prototype.add',
    string: 'Assemble.prototype.task',
    original: 'Assemble.prototype.task = Assemble.prototype.add;' },
  { begin: 311,
    type: 'prototype method',
    class: 'Assemble',
    name: 'run',
    args: [],
    string: '.prototype.()',
    original: 'Assemble.prototype.run = function () {' },
  { type: 'comment', begin: 317, end: 334 },
  { begin: 336,
    type: 'prototype method',
    class: 'Assemble',
    name: 'src',
    args: [ 'glob', 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.src = function (glob, options) {' },
  { type: 'comment', begin: 348, end: 365 },
  { begin: 367,
    type: 'prototype method',
    class: 'Assemble',
    name: 'dest',
    args: [ 'dest', 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.dest = function (dest, options) {' },
  { type: 'comment', begin: 379, end: 398 },
  { begin: 400,
    type: 'prototype method',
    class: 'Assemble',
    name: 'collection',
    args: [ 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.collection = function (options) {' },
  { type: 'comment', begin: 406, end: 414 },
  { begin: 416,
    type: 'prototype method',
    class: 'Assemble',
    name: 'page',
    args: [ 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.page = function(options) {' },
  { type: 'comment', begin: 421, end: 430 },
  { begin: 432,
    type: 'prototype method',
    class: 'Assemble',
    name: 'pages',
    args: [ 'config', 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.pages = function(config, options) {' },
  { type: 'comment', begin: 438, end: 468 },
  { begin: 470,
    type: 'prototype method',
    class: 'Assemble',
    name: 'partial',
    args: [ 'patterns', 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.partial = function (patterns, options) {' },
  { type: 'comment', begin: 475, end: 499 },
  { begin: 501,
    type: 'prototype method',
    class: 'Assemble',
    name: 'partials',
    args: [ 'patterns', 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.partials = function (patterns, options) {' },
  { type: 'comment', begin: 511, end: 540 },
  { begin: 542,
    type: 'prototype method',
    class: 'Assemble',
    name: 'layout',
    args: [ 'patterns', 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.layout = function (patterns, options) {' },
  { type: 'comment', begin: 547, end: 566 },
  { begin: 568,
    type: 'prototype method',
    class: 'Assemble',
    name: 'layouts',
    args: [ 'patterns', 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.layouts = function (patterns, options) {' },
  { type: 'comment', begin: 578, end: 588 },
  { begin: 590,
    type: 'prototype method',
    class: 'Assemble',
    name: 'helper',
    args: [ 'patterns' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.helper = function (patterns) {' },
  { type: 'comment', begin: 595, end: 605 },
  { begin: 607,
    type: 'prototype method',
    class: 'Assemble',
    name: 'helpers',
    args: [ 'patterns' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.helpers = function (patterns) {' },
  { type: 'comment', begin: 621, end: 633 },
  { begin: 635,
    type: 'prototype method',
    class: 'Assemble',
    name: 'engine',
    args: [ 'ext', 'fn', 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.engine = function (ext, fn, options) {' },
  { begin: 638,
    type: 'property',
    receiver: 'engine',
    name: 'renderFile',
    value: 'fn',
    string: 'engine.renderFile',
    original: 'engine.renderFile = fn;' },
  { begin: 639,
    type: 'property',
    receiver: 'engine',
    name: 'render',
    value: 'fn.render',
    string: 'engine.render',
    original: 'engine.render = fn.render;' },
  { begin: 642,
    type: 'property',
    receiver: 'engine',
    name: 'renderFile',
    value: 'fn.renderFile || fn.__express',
    string: 'engine.renderFile',
    original: 'engine.renderFile = fn.renderFile || fn.__express;' },
  { begin: 645,
    type: 'property',
    receiver: 'engine',
    name: 'options',
    value: 'fn.options || options || {}',
    string: 'engine.options',
    original: 'engine.options = fn.options || options || {};' },
  { type: 'comment', begin: 672, end: 682 },
  { begin: 684,
    type: 'prototype method',
    class: 'Assemble',
    name: 'render',
    args: [ 'file', 'options', 'callback' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.render = function (file, options, callback) {' },
  { type: 'comment', begin: 717, end: 746 },
  { begin: 748,
    type: 'prototype method',
    class: 'Assemble',
    name: 'parser',
    args: [ 'ext', 'fn' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.parser = function (ext, fn) {' },
  { type: 'comment', begin: 766, end: 774 },
  { begin: 776,
    type: 'prototype method',
    class: 'Assemble',
    name: 'parse',
    args: [ 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.parse = function (options) {' },
  { type: 'comment', begin: 781, end: 788 },
  { type: 'comment', begin: 797, end: 816 },
  { type: 'comment', begin: 844, end: 853 },
  { begin: 855,
    type: 'prototype method',
    class: 'Assemble',
    name: 'buffer',
    args: [ 'options' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.buffer = function (options) {' },
  { type: 'comment', begin: 861, end: 882 },
  { begin: 884,
    type: 'prototype method',
    class: 'Assemble',
    name: 'highlight',
    args: [ 'code', 'lang' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.highlight = function (code, lang) {' },
  { begin: 886,
    type: 'property',
    receiver: 'this',
    name: 'highlighter',
    value: 'code',
    string: 'this.highlighter',
    original: 'this.highlighter = code;' },
  { type: 'comment', begin: 897, end: 914 },
  { begin: 916,
    type: 'prototype method',
    class: 'Assemble',
    name: 'watch',
    args: [ 'glob', 'options', 'fn' ],
    string: '.prototype.()',
    original: 'Assemble.prototype.watch = function(glob, options, fn) {' },
  { type: 'comment', begin: 932, end: 934 },
  { type: 'comment', begin: 941, end: 943 },
  { begin: 945,
    type: 'property',
    receiver: 'module',
    name: 'exports',
    value: 'Assemble',
    string: 'module.exports',
    original: 'module.exports = Assemble;' } ]