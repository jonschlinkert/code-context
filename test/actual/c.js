[ { begin: 10,
    type: 'declaration',
    name: '_',
    value: 'require(\'lodash\')',
    string: '_',
    original: 'var _ = require(\'lodash\');' },
  { begin: 11,
    type: 'declaration',
    name: 'util',
    value: 'require(\'util\')',
    string: 'util',
    original: 'var util = require(\'util\');' },
  { begin: 12,
    type: 'declaration',
    name: 'namespaceData',
    value: 'require(\'namespace-data\')',
    string: 'namespaceData',
    original: 'var namespaceData = require(\'namespace-data\');' },
  { begin: 13,
    type: 'declaration',
    name: 'getobject',
    value: 'require(\'getobject\')',
    string: 'getobject',
    original: 'var getobject = require(\'getobject\');' },
  { begin: 14,
    type: 'declaration',
    name: 'expander',
    value: 'require(\'expander\')',
    string: 'expander',
    original: 'var expander = require(\'expander\');' },
  { begin: 15,
    type: 'declaration',
    name: 'plasma',
    value: 'require(\'plasma\')',
    string: 'plasma',
    original: 'var plasma = require(\'plasma\');' },
  { begin: 16,
    type: 'declaration',
    name: 'expand',
    value: 'expander.process',
    string: 'expand',
    original: 'var expand = expander.process;' },
  { begin: 17,
    type: 'declaration',
    name: 'Events',
    value: 'require(\'./events\')',
    string: 'Events',
    original: 'var Events = require(\'./events\');' },
  { begin: 33,
    type: 'declaration',
    name: 'Cache',
    value: 'module.exports = function(obj) {',
    string: 'Cache',
    original: 'var Cache = module.exports = function(obj) {' },
  { begin: 35,
    type: 'property',
    receiver: 'this',
    name: 'cache',
    value: 'obj || {}',
    string: 'this.cache',
    original: 'this.cache = obj || {};' },
  { begin: 56,
    type: 'prototype method',
    class: 'Cache',
    name: 'keys',
    params: [],
    string: 'Cache.prototype.keys()',
    original: 'Cache.prototype.keys = function() {' },
  { begin: 78,
    type: 'prototype method',
    class: 'Cache',
    name: 'hasOwn',
    params: [ 'key', 'obj' ],
    string: 'Cache.prototype.hasOwn()',
    original: 'Cache.prototype.hasOwn = function(key, obj) {' },
  { begin: 98,
    type: 'prototype method',
    class: 'Cache',
    name: 'clone',
    params: [ 'obj' ],
    string: 'Cache.prototype.clone()',
    original: 'Cache.prototype.clone = function(obj) {' },
  { begin: 119,
    type: 'prototype method',
    class: 'Cache',
    name: 'each',
    params: [ 'fn', 'obj' ],
    string: 'Cache.prototype.each()',
    original: 'Cache.prototype.each = function(fn, obj) {' },
  { begin: 147,
    type: 'prototype method',
    class: 'Cache',
    name: 'visit',
    params: [ 'obj', 'fn' ],
    string: 'Cache.prototype.visit()',
    original: 'Cache.prototype.visit = function(obj, fn) {' },
  { begin: 148,
    type: 'declaration',
    name: 'cloned',
    value: '{}',
    string: 'cloned',
    original: 'var cloned = {};' },
  { begin: 156,
    type: 'declaration',
    name: 'child',
    value: 'obj[key]',
    string: 'child',
    original: 'var child = obj[key];' },
  { begin: 214,
    type: 'prototype method',
    class: 'Cache',
    name: 'set',
    params: [ 'key', 'value', 'expand' ],
    string: 'Cache.prototype.set()',
    original: 'Cache.prototype.set = function(key, value, expand) {' },
  { begin: 254,
    type: 'prototype method',
    class: 'Cache',
    name: 'get',
    params: [ 'key', 'create' ],
    string: 'Cache.prototype.get()',
    original: 'Cache.prototype.get = function(key, create) {' },
  { begin: 280,
    type: 'prototype method',
    class: 'Cache',
    name: 'constant',
    params: [ 'key', 'value', 'namespace' ],
    string: 'Cache.prototype.constant()',
    original: 'Cache.prototype.constant = function(key, value, namespace) {' },
  { begin: 316,
    type: 'prototype method',
    class: 'Cache',
    name: 'methods',
    params: [ 'obj' ],
    string: 'Cache.prototype.methods()',
    original: 'Cache.prototype.methods = function(obj) {' },
  { begin: 342,
    type: 'prototype method',
    class: 'Cache',
    name: 'enabled',
    params: [ 'key' ],
    string: 'Cache.prototype.enabled()',
    original: 'Cache.prototype.enabled = function(key) {' },
  { begin: 367,
    type: 'prototype method',
    class: 'Cache',
    name: 'disabled',
    params: [ 'key' ],
    string: 'Cache.prototype.disabled()',
    original: 'Cache.prototype.disabled = function(key) {' },
  { begin: 389,
    type: 'prototype method',
    class: 'Cache',
    name: 'enable',
    params: [ 'key' ],
    string: 'Cache.prototype.enable()',
    original: 'Cache.prototype.enable = function(key) {' },
  { begin: 412,
    type: 'prototype method',
    class: 'Cache',
    name: 'disable',
    params: [ 'key' ],
    string: 'Cache.prototype.disable()',
    original: 'Cache.prototype.disable = function(key) {' },
  { begin: 437,
    type: 'prototype method',
    class: 'Cache',
    name: 'exists',
    params: [ 'key' ],
    string: 'Cache.prototype.exists()',
    original: 'Cache.prototype.exists = function(key) {' },
  { begin: 465,
    type: 'prototype method',
    class: 'Cache',
    name: 'union',
    params: [ 'key' ],
    string: 'Cache.prototype.union()',
    original: 'Cache.prototype.union = function(key) {' },
  { begin: 466,
    type: 'declaration',
    name: 'args',
    value: '[].slice.call(arguments, 1)',
    string: 'args',
    original: 'var args = [].slice.call(arguments, 1);' },
  { begin: 467,
    type: 'declaration',
    name: 'arr',
    value: 'this.get(key) || []',
    string: 'arr',
    original: 'var arr = this.get(key) || [];' },
  { begin: 510,
    type: 'prototype method',
    class: 'Cache',
    name: 'extend',
    params: [],
    string: 'Cache.prototype.extend()',
    original: 'Cache.prototype.extend = function() {' },
  { begin: 511,
    type: 'declaration',
    name: 'args',
    value: '[].slice.call(arguments)',
    string: 'args',
    original: 'var args = [].slice.call(arguments);' },
  { begin: 513,
    type: 'declaration',
    name: 'obj',
    value: 'this.get(args[0]) || {}',
    string: 'obj',
    original: 'var obj = this.get(args[0]) || {};' },
  { begin: 545,
    type: 'prototype method',
    class: 'Cache',
    name: 'merge',
    params: [],
    string: 'Cache.prototype.merge()',
    original: 'Cache.prototype.merge = function() {' },
  { begin: 546,
    type: 'declaration',
    name: 'args',
    value: '[].slice.call(arguments)',
    string: 'args',
    original: 'var args = [].slice.call(arguments);' },
  { begin: 548,
    type: 'declaration',
    name: 'obj',
    value: 'this.get(args[0]) || {}',
    string: 'obj',
    original: 'var obj = this.get(args[0]) || {};' },
  { begin: 585,
    type: 'prototype method',
    class: 'Cache',
    name: 'process',
    params: [ 'lookup', 'context' ],
    string: 'Cache.prototype.process()',
    original: 'Cache.prototype.process = function(lookup, context) {' },
  { begin: 592,
    type: 'declaration',
    name: 'methods',
    value: 'this.methods(context)',
    string: 'methods',
    original: 'var methods = this.methods(context);' },
  { begin: 613,
    type: 'prototype method',
    class: 'Cache',
    name: 'flattenData',
    params: [ 'data', 'name' ],
    string: 'Cache.prototype.flattenData()',
    original: 'Cache.prototype.flattenData = function(data, name) {' },
  { begin: 643,
    type: 'prototype method',
    class: 'Cache',
    name: 'extendData',
    params: [],
    string: 'Cache.prototype.extendData()',
    original: 'Cache.prototype.extendData = function() {' },
  { begin: 644,
    type: 'declaration',
    name: 'args',
    value: '[].slice.call(arguments)',
    string: 'args',
    original: 'var args = [].slice.call(arguments);' },
  { begin: 646,
    type: 'declaration',
    name: 'rest',
    value: '_.extend.apply(_, [].concat(_.rest(args)))',
    string: 'rest',
    original: 'var rest = _.extend.apply(_, [].concat(_.rest(args)));' },
  { begin: 678,
    type: 'prototype method',
    class: 'Cache',
    name: 'plasma',
    params: [],
    string: 'Cache.prototype.plasma()',
    original: 'Cache.prototype.plasma = function() {' },
  { begin: 679,
    type: 'declaration',
    name: 'args',
    value: '[].slice.call(arguments)',
    string: 'args',
    original: 'var args = [].slice.call(arguments);' },
  { begin: 714,
    type: 'prototype method',
    class: 'Cache',
    name: 'namespace',
    params: [ 'namespace', 'data', 'context' ],
    string: 'Cache.prototype.namespace()',
    original: 'Cache.prototype.namespace = function(namespace, data, context) {' },
  { begin: 715,
    type: 'declaration',
    name: 'ctx',
    value: '_.extend({}, this.cache.data, context)',
    string: 'ctx',
    original: 'var ctx = _.extend({}, this.cache.data, context);' },
  { begin: 716,
    type: 'declaration',
    name: 'obj',
    value: 'namespaceData(namespace, data, ctx)',
    string: 'obj',
    original: 'var obj = namespaceData(namespace, data, ctx);' },
  { begin: 744,
    type: 'prototype method',
    class: 'Cache',
    name: 'data',
    params: [],
    string: 'Cache.prototype.data()',
    original: 'Cache.prototype.data = function() {' },
  { begin: 745,
    type: 'declaration',
    name: 'args',
    value: '[].slice.call(arguments)',
    string: 'args',
    original: 'var args = [].slice.call(arguments);' },
  { begin: 750,
    type: 'declaration',
    name: 'obj',
    value: '{}',
    string: 'obj',
    original: 'var obj = {};' },
  { begin: 785,
    type: 'prototype method',
    class: 'Cache',
    name: 'omit',
    params: [],
    string: 'Cache.prototype.omit()',
    original: 'Cache.prototype.omit = function() {' },
  { begin: 786,
    type: 'declaration',
    name: 'args',
    value: '[].slice.call(arguments)',
    string: 'args',
    original: 'var args = [].slice.call(arguments);' },
  { begin: 787,
    type: 'property',
    receiver: 'this',
    name: 'cache',
    value: '_.omit.apply(_, [this.cache].concat(args))',
    string: 'this.cache',
    original: 'this.cache = _.omit.apply(_, [this.cache].concat(args));' },
  { begin: 810,
    type: 'prototype method',
    class: 'Cache',
    name: 'clear',
    params: [ 'key' ],
    string: 'Cache.prototype.clear()',
    original: 'Cache.prototype.clear = function(key) {' },
  { begin: 815,
    type: 'property',
    receiver: 'this',
    name: 'cache',
    value: '{}',
    string: 'this.cache',
    original: 'this.cache = {};' },
  { begin: 832,
    type: 'function statement',
    name: 'typeOf',
    params: [ 'value' ],
    string: 'typeOf()',
    original: 'function typeOf(value) {' } ]